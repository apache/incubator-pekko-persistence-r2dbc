name: Nightly Tests (Pekko 1.0.x)

on:
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:

jobs:
  compile:
    name: Test and compile (scala 2.12/2.13)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        SCALA_VERSION: [ 2.12, 2.13 ]
        JAVA_VERSION: [ 8 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Java ${{ matrix.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.JAVA_VERSION }}

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6

      - name: Enable jvm-opts
        run: cp .jvmopts-ci .jvmopts

      - name: Compile and test for JDK ${{ matrix.JAVA_VERSION }}, Scala ${{ matrix.SCALA_VERSION }}
        run: sbt -Dpekko.build.pekko.version=1.0.x ++${{ matrix.SCALA_VERSION }} test:compile

  compile3:
    name: Test and compile (scala 3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6

      - name: Enable jvm-opts
        run: cp .jvmopts-ci .jvmopts

      - name: Compile
        run: sbt -Dpekko.build.pekko.version=1.0.x ++3.3 projection/Test/compile

  test-postgres:
    name: Run test with Postgres
    runs-on: ubuntu-latest
    strategy:
      matrix:
        SCALA_VERSION: [ 2.12, 2.13 ]
        JAVA_VERSION: [ 8 ]
    if: github.repository == 'apache/pekko-persistence-r2dbc'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Setup Java ${{ matrix.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.JAVA_VERSION }}

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6

      - name: Enable jvm-opts
        run: cp .jvmopts-ci .jvmopts

      - name: Start DB
        run: |-
          docker-compose -f docker/docker-compose-postgres.yml up -d
          # TODO: could we poll the port instead of sleep?
          sleep 10
          docker exec -i docker-postgres-db-1 psql -U postgres -t < ddl-scripts/create_tables_postgres.sql

      - name: test
        run: sbt -Dpekko.build.pekko.version=1.0.x ++${{ matrix.SCALA_VERSION }} test

  test-postgres-scala3:
    name: Run test with Postgres (Scala 3)
    runs-on: ubuntu-latest
    if: github.repository == 'apache/pekko-persistence-r2dbc'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6

      - name: Enable jvm-opts
        run: cp .jvmopts-ci .jvmopts

      - name: Start DB
        run: |-
          docker-compose -f docker/docker-compose-postgres.yml up -d
          # TODO: could we poll the port instead of sleep?
          sleep 10
          docker exec -i docker-postgres-db-1 psql -U postgres -t < ddl-scripts/create_tables_postgres.sql

      - name: test
        run: sbt -Dpekko.build.pekko.version=1.0.x ++3.3 core/test
